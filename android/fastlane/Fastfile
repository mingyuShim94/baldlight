default_platform(:android)

platform :android do
  desc "Build and upload to Google Play Internal Testing"
  lane :internal do
    flutter_build(
      build: 'appbundle',
      release: true
    )
    
    upload_to_play_store(
      track: 'internal',
      aab: '../build/app/outputs/bundle/release/app-release.aab',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Build and upload to Google Play Beta"
  lane :beta do
    flutter_build(
      build: 'appbundle',
      release: true
    )
    
    upload_to_play_store(
      track: 'beta',
      aab: '../build/app/outputs/bundle/release/app-release.aab',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Build and upload to Google Play Production"
  lane :production do
    flutter_build(
      build: 'appbundle',
      release: true
    )
    
    upload_to_play_store(
      track: 'production',
      aab: '../build/app/outputs/bundle/release/app-release.aab',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Build APK for testing"
  lane :build_debug do
    flutter_build(
      build: 'apk',
      debug: true
    )
  end

  desc "Build release APK"
  lane :build_release do
    flutter_build(
      build: 'apk',
      release: true
    )
  end

  private_lane :flutter_build do |options|
    Dir.chdir ".." do
      sh("flutter", "packages", "get")
      sh("flutter", "clean")
      
      if options[:debug]
        sh("flutter", "build", options[:build], "--debug")
      else
        sh("flutter", "build", options[:build], "--release")
      end
    end
  end
end